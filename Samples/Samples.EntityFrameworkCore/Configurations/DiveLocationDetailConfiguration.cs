// ------------------------------------------------------------------------------------------------

// <auto-generated>
// ReSharper disable CheckNamespace
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable NotAccessedVariable
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantCast
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// ReSharper disable UsePatternMatching
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning



using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Samples.Domain.Entities;

namespace Samples.ObjectAccess.EFCore
{
    
// DiveLocationDetails
    
public partial class DiveLocationDetailConfiguration : IEntityTypeConfiguration<DiveLocationDetail>
    
{
    

    public void Configure(EntityTypeBuilder<DiveLocationDetail> builder)
    
    {
    

        builder.ToTable("DiveLocationDetails", "dbo");
    

        builder.HasKey(x => x.DiveLocationId).HasName("PK_DiveLocationDetails").IsClustered();

    


        builder.Property(x => x.DiveLocationId).HasColumnName(@"DiveLocationId").HasColumnType("uniqueidentifier").IsRequired().ValueGeneratedNever();
    

        builder.Property(x => x.ImageData).HasColumnName(@"ImageData").HasColumnType("varbinary(max)").IsRequired(false);

    





    }
    



}

}
// </auto-generated>

