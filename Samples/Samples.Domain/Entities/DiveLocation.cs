// ------------------------------------------------------------------------------------------------

// <auto-generated>
// ReSharper disable CheckNamespace
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable NotAccessedVariable
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantCast
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// ReSharper disable UsePatternMatching
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning



using System;


using System.Collections.Generic;


using System.ComponentModel.DataAnnotations;


using System.Threading;


using System.Threading.Tasks;


namespace Samples.Domain.Entities
{
    




// DiveLocations
    


public partial class DiveLocation
    
{
    





    /// <summary>
    
    /// Id (Primary key)
    
    /// </summary>
    


    [Key]
    

    [Required]
    

    [Display(Name = "Id")]
    

    public Guid Id { get; set; }

    

    /// <summary>
    
    /// LocationName (length: 255)
    
    /// </summary>
    


    [MaxLength(255)]
    

    [StringLength(255)]
    

    [Required(AllowEmptyStrings = true)]
    

    [Display(Name = "Location name")]
    

    public string LocationName { get; set; }

    

    /// <summary>
    
    /// GpsCoordinates (length: 255)
    
    /// </summary>
    


    [MaxLength(255)]
    

    [StringLength(255)]
    

    [Required(AllowEmptyStrings = true)]
    

    [Display(Name = "Gps coordinates")]
    

    public string GpsCoordinates { get; set; }

    

    /// <summary>
    
    /// DiveTypeId
    
    /// </summary>
    


    [Required]
    

    [Display(Name = "Dive type ID")]
    

    public Guid DiveTypeId { get; set; }

    

    /// <summary>
    
    /// DiveDesc (length: 1073741823)
    
    /// </summary>
    


    [MaxLength]
    

    [Required(AllowEmptyStrings = true)]
    

    [Display(Name = "Dive desc")]
    

    public string DiveDesc { get; set; }

    
    // Foreign keys

    
    /// <summary>
    
    /// Parent DiveLocationDetail pointed by [DiveLocations].([Id]) (FK_DiveLocations_DiveLocationDetails)
    
    /// </summary>
    






    public virtual DiveLocationDetail DiveLocationDetail { get; set; } // FK_DiveLocations_DiveLocationDetails

    
    /// <summary>
    
    /// Parent DiveType pointed by [DiveLocations].([DiveTypeId]) (FK_DiveLocations_DiveTypes)
    
    /// </summary>
    






    public virtual DiveType DiveType { get; set; } // FK_DiveLocations_DiveTypes

    
    public DiveLocation()
    
    {
    


        Id = Guid.NewGuid();
    





        InitializePartial();
    


    }

    
    partial void InitializePartial();
    




}

}
// </auto-generated>

